<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:CompuTrackWPF"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation" x:Name="window" mc:Ignorable="d" x:Class="CompuTrackWPF.MainWindow"
        Title="CompuTrack" Height="600" Width="800" KeyDown="window_KeyDown"
        ResizeMode="CanMinimize" Background="#FFFFE773" Icon="/CompuTrackWPF;component/icon.png">
    <Window.Resources>
        <local:CustomerData x:Key="CustomerList" />
        <local:TicketStatusCollection x:Key="StatusList" />
        <local:CustomerFiltersCollection x:Key="CustomerFilterList" />
        <local:TicketListCollection x:Key="TicketList"/>
        <!--A Style that affects all tabs-->
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border
                                x:Name="Border"
                                Background="#FFDE40"
                                BorderBrush="Black"
                                BorderThickness="1,1,1,1"
                                CornerRadius="6,6,0,0" >
                                <ContentPresenter x:Name="ContentSite"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  ContentSource="Header"
                                                  Margin="12,2,12,2" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#FFD300" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="#FFDE40" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="loginStoryboardShow">
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="userNameBox">
        		<EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
        	</DoubleAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="passwordBox">
        		<EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
        	</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="loginMessageLabel">
        		<EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
        	</DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="loginStoryboardHide">
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="userNameBox">
        		<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
        	</DoubleAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="passwordBox">
        		<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
        	</DoubleAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="loginMessageLabel">
        		<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
        	</DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
	<Window.CommandBindings>
    <CommandBinding Command="{x:Static local:MainWindow.signOutRoutedCommand}"
                    Executed="ExecuteSignOutCommand"
					CanExecute="CanExecuteCustomCommand" />
    <CommandBinding Command="{x:Static local:MainWindow.manageUsersRoutedCommand}"
                    Executed="ExecuteManageUsersCommand"
					CanExecute="CanExecuteCustomCommand" />
	</Window.CommandBindings>
	<Window.Triggers>
		<EventTrigger RoutedEvent="FrameworkElement.Loaded">
			<BeginStoryboard Storyboard="{StaticResource loginStoryboardHide}"/>
		</EventTrigger>
	</Window.Triggers>

    <Grid>
        <Menu HorizontalAlignment="Left" x:Name="menu1" Margin="0,0,0,550" Width="794">
            <MenuItem Header="_File">
                <MenuItem Header="FrontDesk Mode" x:Name="FrontDeskMenuItem" Click="FrontDeskMode_Click"/>
                <MenuItem Header="Preferences" Click="Preferences_Click"/>
                <MenuItem Header="_Exit" Click="MenuClick_Exit"/>
                
            </MenuItem>
            <MenuItem Header="Customers">
                <MenuItem Header="_New Customer" x:Name="newCustomerMenuItem" Click="newCustomerBtn_Click" />
                <MenuItem Header="_New Ticket" x:Name="newTicketMenuItem" Click="newTicketBtn_Click"/>
            </MenuItem>
            <MenuItem Header="Inventory">
                <MenuItem Header="New Item" x:Name="newItemMenuItem"  Click="inventoryPageCall_Click"/>
                <MenuItem Header="Log" x:Name="newLogMenuItem" Click="inventoryLog_Click"/>
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Header="About" Click="about_Click"/>
            </MenuItem>
        </Menu>
        <TabControl Height="535" HorizontalAlignment="Left" Margin="0,43,0,0" x:Name="tabControl1" VerticalAlignment="Top" Width="{Binding ActualWidth, ElementName=window}">
            <TabItem Header="Customers" x:Name="customersTab" Background="#FFF9F9F9">
                <Grid x:Name="customersTabGrid">
                	<Grid.ColumnDefinitions>
                		<ColumnDefinition Width="0.065*"/>
                		<ColumnDefinition Width="0.935*"/>
                	</Grid.ColumnDefinitions>
                    <ComboBox HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Column="1" Margin="-51.35,0,0,0" Width="111.94" SelectedIndex="0" Name="customerFilterComboBox" ItemsSource="{Binding Source={StaticResource CustomerFilterList}}" DisplayMemberPath="filterString" SelectionChanged="customerFilterComboBox_SelectionChanged"></ComboBox>
                    <Label x:Name="tempLabel" Content="Must log in to create customer/ticket/item. Try user/user. This message is temporary." HorizontalAlignment="Left" VerticalAlignment="Top" Margin="213.65,1,0,0" Foreground="Red" Grid.Column="1"/>
                	<Canvas x:Name="customerCanvas" Margin="159.65,87,17.616,-66.96" Grid.Column="1">
                		<Grid x:Name="LayoutRoot" Width="564" Height="435.132" Canvas.Top="-69">
                			<Grid.RowDefinitions>
                				<RowDefinition/>
                				<RowDefinition Height="0*"/>
                			</Grid.RowDefinitions>
                            
                			<DockPanel Height="100" LastChildFill="False" VerticalAlignment="Top" Margin="0,0,18,0">
                				<Label x:Name="customerName" Content="Label" d:LayoutOverrides="VerticalAlignment" VerticalAlignment="Top" FontSize="26.667" FontWeight="Bold"/>
                                <Button x:Name="edit" Content="Edit" VerticalAlignment="Top" Click="editCustomer_Click" Width="47" Margin="0,12,0,0" />
                            </DockPanel>
                            <local:SortableListView GridViewColumnHeader.Click="ticketListView_HeaderClick"  HorizontalAlignment="Left" x:Name="ticketListView" Width="548" ItemsSource="{Binding Source={StaticResource TicketList}}" IsSynchronizedWithCurrentItem="{x:Null}" SelectionMode="Single" Margin="8,198.557,0,-24.385" SelectionChanged="ticketListView_SelectionChanged" MouseDoubleClick="ticketDoubleClick" Grid.RowSpan="2">       
                				<ListView.View>
                					<GridView>                    
                						<GridViewColumn DisplayMemberBinding="{Binding dateString}" Header="Date" Width="75" />
                						<GridViewColumn DisplayMemberBinding="{Binding ticketNoInt}" Header="Ticket No" Width="75" />
                                        <GridViewColumn DisplayMemberBinding="{Binding statusString}" Header="Status" Width="95" />
                                        <GridViewColumn DisplayMemberBinding="{Binding typeString}" Header="Type" Width="95" />
                                        <GridViewColumn DisplayMemberBinding="{Binding makeString}" Header="Make" Width="95" />
                                        <GridViewColumn DisplayMemberBinding="{Binding modelString}" Header="Model" Width="105" />
                                    </GridView>            
                				</ListView.View>
                			</local:SortableListView>
                            <Label x:Name="email" Content="Email:" Margin="268,71.32,0,0" VerticalAlignment="Top" FontSize="16" HorizontalAlignment="Left" Width="278"/>
                			<Label x:Name="address" Content="Address:" Margin="3.659,71.32,0,0" VerticalAlignment="Top" FontSize="16" RenderTransformOrigin="0.449,0.638" Height="60" HorizontalAlignment="Left"/>
                			<Label Content="Tickets" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="2,138,0,0" FontSize="16" d:LayoutOverrides="VerticalAlignment" FontWeight="Bold"/>
                			<Border BorderBrush="Black" BorderThickness="1" Margin="0,169.28,0,-36.385" Grid.RowSpan="2">
                				<Canvas x:Name="canvas1" Margin="0,0,-10,-1">
                                    <local:DropDownButton x:Name="editTicketDropDownBtn" Content="Edit" Width="60" IsEnabled="False" Canvas.Left="494" Canvas.Top="4">

                                        <local:DropDownButton.DropDown>
                                            <ContextMenu>
                                                <MenuItem Header="External Ticket" Click="editTicket_Click" />
                                                <MenuItem Header="Internal Ticket" Click="intTicketBtn_Click" />
                                            </ContextMenu>
                                        </local:DropDownButton.DropDown>
                                    </local:DropDownButton>
                                    <Button Click="newTicketAutoSelectCustomer" Content="New Ticket" Name="newTicketBtn" TabIndex="1" Canvas.Left="419" Canvas.Top="4" Width="72" />
                                </Canvas>
                            </Border>
                            <Label Content="Show" HorizontalAlignment="Left" Margin="9,173,0,0" RenderTransformOrigin="0.481,0.501" VerticalAlignment="Top" Opacity="0.7">
                				<Label.RenderTransform>
                					<TransformGroup>
                						<ScaleTransform/>
                						<SkewTransform AngleX="-2.048"/>
                						<RotateTransform/>
                						<TranslateTransform X="0.47"/>
                					</TransformGroup>
                				</Label.RenderTransform>
                			</Label>
                            <ComboBox HorizontalAlignment="Left" VerticalAlignment="Top" Width="120" Margin="47,173.28,0,0" ItemsSource="{Binding Source={StaticResource StatusList}}" DisplayMemberPath="statusString" IsReadOnly="True" x:Name="statusComboBox" SelectionChanged="statusSelectionChanged" />
                			<Label x:Name="phoneNumbersLabel" Content="Phones" Margin="268,92.32,0,0" VerticalAlignment="Top" FontSize="16" HorizontalAlignment="Left" Width="278"/>
                        </Grid>
                    </Canvas>
                	<Button Content="New Customer" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="64.59,1,0,0" x:Name="newCustomerBtn" Click="newCustomerBtn_Click" Grid.Column="1" TabIndex="1" />
                    <local:ClickSelectTextBox TextChanged="filterTxtBox_TextChanged" TextWrapping="Wrap" Text="Type to filter customers..." Height="21.96" VerticalAlignment="Top" Width="176.35" Margin="-51.516,24.334,0,0" HorizontalAlignment="Left" x:Name="filterTxtBox" Grid.Column="1" d:LayoutOverrides="GridBox" TabIndex="2" MaxLength="30" />
                    <ListView SelectionMode="Single" Margin="-51,46.96,0,0" HorizontalAlignment="Left" Width="200" x:Name="customerListView" ItemsSource="{Binding Source={StaticResource CustomerList}}" DisplayMemberPath="FullNameString" IsSynchronizedWithCurrentItem="{x:Null}" Grid.Column="1" SelectionChanged="customerListView_SelectionChanged_1" TabIndex="3" />
                    <Label x:Name="SelectCustLabel" Content="Select a customer on the left to view ticket history." VerticalAlignment="Top" Margin="319,211,137.61,0" d:LayoutOverrides="Width" Grid.Column="1"/>
                    <Image Source="Search-icon.png" Margin="129.5,26,589.5,458" Grid.Column="1">
                        <Image.OpacityMask>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Black" Offset="0" />
                                <GradientStop Color="White" Offset="1" />
                            </LinearGradientBrush>
                        </Image.OpacityMask>
                    </Image>
                </Grid>
            </TabItem>
            <TabItem Header="Inventory" x:Name="inventoryTab" Background="#FFF9F9F9">
                <Grid>
                    <Frame Source="InventoryMain.xaml" NavigationUIVisibility="Hidden" Height="500" HorizontalAlignment="Left" Margin="-5,2,0,0" x:Name="inventoryFrame" VerticalAlignment="Top" Width="785" />
                </Grid>
            </TabItem>
        </TabControl>
        <Label x:Name="lblMessage" Content="" HorizontalAlignment="Right" Margin="0,15,2,0" VerticalAlignment="Top" Width="207" HorizontalContentAlignment="Right" Height="28"/>
        <Image Height="45" Margin="270,23,269,0" Source="trans-logo.png" Stretch="Fill" VerticalAlignment="Top"/>
        <telerik:RadSplitButton x:Name="loginSplitBtn" Content="Log In" HorizontalContentAlignment="Right" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,22.04,0,0" Click="LoginSplitClick" DropDownButtonPosition="Right" DropDownPlacement="Bottom">
            <telerik:RadSplitButton.DropDownContent>
                <StackPanel>
                    <MenuItem Header="Manage Users"  x:Name="manageUsersOption" Command="{x:Static local:MainWindow.manageUsersRoutedCommand}" />
                    <MenuItem Header="Sign out" x:Name="signOutOption" Command="{x:Static local:MainWindow.signOutRoutedCommand}" />
                </StackPanel>
            </telerik:RadSplitButton.DropDownContent>
        </telerik:RadSplitButton>
        <TextBox x:Name="userNameBox" HorizontalAlignment="Right" TextWrapping="Wrap" Text="Username" VerticalAlignment="Top" Margin="0,25,157.443,0" Width="92.553" Opacity="0" MaxLength="15" GotFocus="selectAllText" />
    	<PasswordBox x:Name="passwordBox" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,26,56.443,0" Width="97" Password="password" Opacity="0" MaxLength="15" KeyDown="onEnterKey" GotFocus="selectPassword" />
    	<Label x:Name="loginMessageLabel" Content="" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,43,21.616,0" Opacity="0"/>
    </Grid>
</Window>
